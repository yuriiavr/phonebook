{"version":3,"file":"static/js/145.bd085eca.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/contacts/phone-operations.js","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsPage/ContactsPage.module.css?5257","components/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact__delete__btn\":\"Contact_contact__delete__btn__otJXt\",\"contact__info\":\"Contact_contact__info__aPNH-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport css from './Contact.module.css';\n\nconst Contact = ({ name, number, deleteEl, id, editEl }) => {\n  return (\n    <div>\n      <ListGroup.Item className={css.contact__info}>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={` ${css.contact__delete__btn}`}\n          onClick={() => deleteEl(id)}\n        >\n          Delete\n        </button>\n        <button\n          variant=\"primary\"\n          type=\"button\"\n          className={` ${css.contact__delete__btn}`}\n          onClick={() => editEl(id)}\n        >\n          Edit\n        </button>\n      </ListGroup.Item>\n    </div>\n  );\n};\n\nContact.propType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  deleteEl: PropTypes.func.isRequired,\n};\n\nexport default Contact;","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n} from './phone-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = contacts => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(editContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst editContact =\n  ({ id, name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n    dispatch(deleteContactRequest());\n\n    axios\n      .patch(`/contacts/${id}`, contact)\n      .then(({ data }) => dispatch(editContactSuccess(data)))\n      .catch(error => dispatch(editContactError(error.message)));\n  };\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  editContact,\n};\nexport default contactsOperations;","// extracted by mini-css-extract-plugin\nexport default {\"submit__btn\":\"Modal_submit__btn__SlwEB\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Modal.module.css';\nimport Modal from 'react-bootstrap/Modal';\nimport contactsOperations from 'redux/contacts/phone-operations';\n\nexport default function ShowModal({ show, handleClose, editableItem }) {\n  const [contact, setContact] = useState({\n    id: editableItem.id,\n    name: editableItem.name,\n    number: editableItem.number,\n  });\n  const arrayContact = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n  const editContact = data => dispatch(contactsOperations.editContact(data));\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setContact(prevState => ({\n          ...prevState,\n          [name]: value,\n        }));\n        break;\n\n      case 'number':\n        setContact(prevState => ({\n          ...prevState,\n          [name]: value,\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleChangeSubmit = event => {\n    event.preventDefault();\n\n    const eventNameValue = contact.name;\n    const arrayContactNormalize = arrayContact.contacts.map(e =>\n      e.name.toLowerCase().trim()\n    );\n\n    const filterName = arrayContactNormalize.find(\n      e => e === eventNameValue.toLowerCase().trim()\n    );\n\n    filterName\n      ? alert(`${eventNameValue} is already in Contacts`)\n      : editContact(contact);\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Edit contact</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div /* className={s.searchForm} */>\n            <h2>Name</h2>\n            <input\n              /* className={s.name} */\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={contact.name}\n              onChange={handleChange}\n            />\n\n            <h2>Number</h2>\n            <input\n              /* className={s.number} */\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={contact.number}\n              onChange={handleChange}\n            />\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button className={css.submit__btn} variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </button>\n          <button className={css.submit__btn} variant=\"primary\" type=\"submit\" onClick={handleChangeSubmit}>\n            Save Changes\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\",\"contact__list__item\":\"ContactList_contact__list__item__fOWm7\"};","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PropTypes from 'prop-types';\nimport Contact from 'components/Contact/Contact';\nimport contactsOperations from 'redux/contacts/phone-operations';\nimport ShowModal from 'components/Modal/Modal';\nimport css from '../ContactList/ContactList.module.css';\n\nconst getVisibleEl = (contacts = [], filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport default function ContactList() {\n  const [show, setShow] = useState(false);\n  const [editableItem, setEditableItem] = useState();\n  const handleShow = id => {\n    setShow(true);\n    const getItemForEdit = contactArray.find(e => e.id === id);\n    setEditableItem(getItemForEdit);\n  };\n\n  const handleClose = () => setShow(false);\n\n  const dispatch = useDispatch();\n\n  const contactArray = useSelector(state =>\n    getVisibleEl(state.contacts.contacts, state.contacts.filter)\n  );\n\n  const deleteContact = id => dispatch(contactsOperations.deleteContact(id));\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ListGroup className={css.contact__list}>\n        {contactArray.map(({ id, name, number }) => {\n          return (\n            <Contact\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              deleteEl={deleteContact}\n              editEl={handleShow}\n              className={css.contact__list__item}\n            />\n          );\n        })}\n      </ListGroup>\n      <div>\n        {show && (\n          <ShowModal\n            show={show}\n            handleClose={handleClose}\n            editableItem={editableItem}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contactArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"SearchForm_filter__LXR9F\",\"filter__input\":\"SearchForm_filter__input__oa1Hk\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport css from './SearchForm.module.css';\nimport actions from '../../redux/contacts/phone-actions';\n\nexport default function SearchForm() {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Form.Label htmlFor=\"inputPassword5\" className={css.filter}>\n        Find Contacts by Name\n      </Form.Label>\n      <Form.Control\n        type=\"text\"\n        id=\"inputPassword5\"\n        placeholder='Search...'\n        value={value}\n        aria-describedby=\"passwordHelpBlock\"\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        className={css.filter__input}\n      />\n    </>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"submit__btn\":\"ContactForm_submit__btn__H2f6I\",\"text__muted\":\"ContactForm_text__muted__tx0Jf\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport css from '../ContactForm/ContactForm.module.css';\nimport contactsOperations from 'redux/contacts/phone-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const arrayContact = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n  const addContact = data => dispatch(contactsOperations.addContact(data));\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const eventNameValue = event.target[0].value;\n    const arrayContactNormalize = arrayContact.contacts.map(e =>\n      e.name.toLowerCase().trim()\n    );\n\n    const filterName = arrayContactNormalize.find(\n      e => e === eventNameValue.toLowerCase().trim()\n    );\n\n    filterName\n      ? alert(`${eventNameValue} is already in Contacts`)\n      : addContact({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} className={css.form}>\n      <div>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className={css.form__label}>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n          <Form.Text className={css.text__muted}>Please enter your name</Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label className={css.form__label}>Number</Form.Label>\n          <Form.Control\n            type=\"tel\"\n            placeholder=\"Enter phone number\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n          <Form.Text className={css.text__muted}>\n            Please enter your phone number\n          </Form.Text>\n        </Form.Group>\n        <button variant=\"primary\" type=\"submit\" className={css.submit__btn}>\n          Add contact\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nContactForm.propType = {\n  addContact: PropTypes.func.isRequired,\n  arrayContact: PropTypes.array.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"ListName\":\"ContactsPage_ListName__wU8RC\",\"Table\":\"ContactsPage_Table__AlmDv\",\"contact_heading\":\"ContactsPage_contact_heading__rgMg7\"};","import Container from '../Container';\nimport ContactList from '../ContactList';\nimport SearchForm from '../SearchForm';\nimport ContactForm from '../ContactForm';\nimport css from '../ContactsPage/ContactsPage.module.css';\n\nexport default function ContactPage() {\n  return (\n    <div>\n      <Container>\n        <h1 className={css.contact_heading}>Phone Book</h1>\n        <div className={css.Table}>\n          <div>\n            <h2 className={css.ListName}>Adding contacts</h2>\n            <ContactForm />\n          </div>\n          <div>\n            <h2 className={css.ListName}>Contacts list</h2>\n            <SearchForm />\n            <ContactList />\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}"],"names":["Contact","name","number","deleteEl","id","editEl","ListGroup","className","css","type","onClick","variant","propType","PropTypes","contactsOperations","fetchContacts","dispatch","fetchContactsRequest","axios","data","fetchContactsSuccess","fetchContactsError","message","addContact","contacts","addContactRequest","then","addContactSuccess","catch","error","addContactError","deleteContact","contactId","editContactRequest","deleteContactSuccess","deleteContactError","editContact","contact","deleteContactRequest","editContactSuccess","editContactError","ShowModal","show","handleClose","editableItem","useState","setContact","arrayContact","useSelector","state","useDispatch","handleChange","event","target","value","prevState","Modal","onHide","closeButton","pattern","title","required","onChange","preventDefault","eventNameValue","map","e","toLowerCase","trim","find","alert","ContactList","setShow","setEditableItem","handleShow","getItemForEdit","contactArray","normalizedFilter","filter","includes","getVisibleEl","useEffect","SearchForm","Form","htmlFor","placeholder","actions","ContactForm","setName","setNumber","reset","onSubmit","controlId","ContactPage","Container"],"sourceRoot":""}